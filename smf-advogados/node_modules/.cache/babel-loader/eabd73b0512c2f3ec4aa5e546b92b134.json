{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E1164\\\\Desktop\\\\Sim\\xF5es Advogados\\\\smf-website\\\\smf-advogados\\\\src\\\\components\\\\team\\\\index.tsx\";\nimport React from \"react\";\nimport { Container, Title, TeamLeaderContainer, Element, TeamContainer, TeamElement, BioContainer, Name, Job } from \"./styles\";\nimport { getTranslation } from \"../../helpers\";\nimport { leaders, administrative } from \"./helpers\";\nimport { ReactComponent as Linkedin } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/img/linkedin_element.svg\";\nimport { ReactComponent as Email } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/img/email_element.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TeamComponent = ({\n  language\n}) => {\n  const onClickEmail = email => {\n    window.open(`mailto:${email}`, \"_blank\");\n  };\n\n  const onClickLinkedin = linkedin => {\n    window.open(linkedin, \"_blank\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: getTranslation(\"our_team\", language)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TeamLeaderContainer, {\n      children: leaders.map(leader => {\n        return /*#__PURE__*/_jsxDEV(Element, {\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: leader.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [leader.linkedin && /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => onClickLinkedin(leader.linkedin),\n                  children: /*#__PURE__*/_jsxDEV(Linkedin, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this), leader.email && /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => onClickEmail(leader.email),\n                  children: /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: leader.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: getTranslation(`${leader.job}_${leader.genre}`, language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TeamContainer, {\n      children: administrative.map(person => /*#__PURE__*/_jsxDEV(TeamElement, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: person.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BioContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Name, {\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Job, {\n            children: getTranslation(`${person.job}_${person.genre}`, language)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [person.linkedin && /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => onClickLinkedin(person.linkedin),\n              children: /*#__PURE__*/_jsxDEV(Linkedin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), person.email && /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => onClickEmail(person.email),\n              children: /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = TeamComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamComponent\");","map":{"version":3,"sources":["C:/Users/E1164/Desktop/Sim√µes Advogados/smf-website/smf-advogados/src/components/team/index.tsx"],"names":["React","Container","Title","TeamLeaderContainer","Element","TeamContainer","TeamElement","BioContainer","Name","Job","getTranslation","leaders","administrative","TeamComponent","language","onClickEmail","email","window","open","onClickLinkedin","linkedin","map","leader","image","name","job","genre","person"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Title,\r\n  TeamLeaderContainer,\r\n  Element,\r\n  TeamContainer,\r\n  TeamElement,\r\n  BioContainer,\r\n  Name,\r\n  Job,\r\n} from \"./styles\";\r\nimport { getTranslation } from \"../../helpers\";\r\nimport { leaders, team, interns, administrative } from \"./helpers\";\r\nimport { ReactComponent as Linkedin } from \"../../assets/img/linkedin_element.svg\";\r\nimport { ReactComponent as Email } from \"../../assets/img/email_element.svg\";\r\n\r\ninterface Props {\r\n  language: string;\r\n}\r\n\r\nexport const TeamComponent: React.FunctionComponent<Props> = ({ language }) => {\r\n  const onClickEmail = (email: string): void => {\r\n    window.open(`mailto:${email}`, \"_blank\");\r\n  };\r\n  const onClickLinkedin = (linkedin: string): void => {\r\n    window.open(linkedin, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>{getTranslation(\"our_team\", language)}</Title>\r\n      <TeamLeaderContainer>\r\n        {leaders.map((leader) => {\r\n          return (\r\n            <Element>\r\n              <figure>\r\n                <img src={leader.image} alt=\"\" />\r\n                <figcaption>\r\n                  <ul>\r\n                    {leader.linkedin && (\r\n                      <li\r\n                        onClick={(): void => onClickLinkedin(leader.linkedin)}\r\n                      >\r\n                        <Linkedin />\r\n                      </li>\r\n                    )}\r\n                    {leader.email && (\r\n                      <li onClick={(): void => onClickEmail(leader.email)}>\r\n                        <Email />\r\n                      </li>\r\n                    )}\r\n                  </ul>\r\n                </figcaption>\r\n              </figure>\r\n              <h4>{leader.name}</h4>\r\n              <p>{getTranslation(`${leader.job}_${leader.genre}`, language)}</p>\r\n            </Element>\r\n          );\r\n        })}\r\n      </TeamLeaderContainer>\r\n      {/* <TeamContainer></TeamContainer>\r\n      <TeamContainer></TeamContainer> */}\r\n      <TeamContainer>\r\n        {administrative.map((person) => (\r\n          <TeamElement>\r\n            <img src={person.image} alt=\"\" />\r\n            <BioContainer>\r\n              <Name>{person.name}</Name>\r\n              <Job>\r\n                {getTranslation(`${person.job}_${person.genre}`, language)}\r\n              </Job>\r\n              <ul>\r\n                {person.linkedin && (\r\n                  <li onClick={(): void => onClickLinkedin(person.linkedin)}>\r\n                    <Linkedin />\r\n                  </li>\r\n                )}\r\n                {person.email && (\r\n                  <li onClick={(): void => onClickEmail(person.email)}>\r\n                    <Email />\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </BioContainer>\r\n          </TeamElement>\r\n        ))}\r\n      </TeamContainer>\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}